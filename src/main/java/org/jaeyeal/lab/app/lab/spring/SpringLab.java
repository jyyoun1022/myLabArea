package org.jaeyeal.lab.app.lab.spring;

public class SpringLab {
    /** 스프링
     * 자바 언어 기반의 프레임워크
     * 좋은 객체 지향 프로그래밍을 잘할 수 있도록 도와주는 프레임워크
     */

    /** 좋은 객체 지향 프로그래밍
     *  다형성
     *   클라이언트(요청하는 사람)를 변경하지 않고 서버(응답하는 사람)의 구현 기능을 유연하게 변경
     *   클라이언트 = 사람, 서버 = 자동차
     *
     *   스프링은 다형성을 극대화해서 이용할 수 있게 도와준다.
     */

    /** IOC, DI, 컨테이너
     *
     *  제어의 역전 IOC(Inversion of Control)
     *      기존 프로그램은 클라이언트 구현 객체가 스스로 필요한 서버 구현 객체를 생성하고 연결하고 실행했다.
     *      한 마디로 구현 객체가 프로그램의 제어 흐름을 스스로 조종했다.
     *      하지만 AppConfig가 생성과 연결의 역할을 담당해주면서 프로그램의 제어 흐름은 AppConfig가 가져간다.
     *      예를 들면, 구현 객체는 다른 필요한 인터페이스를 호출하지만 어떤 구현 객체가 들어올지 모르고 그냥 로직만 실행하게 되는 것이다.
     *      이렇게 프로그램의 제어 흐름을 외부에서 관리하는 것이 제어의 역전이다.
     */
}
